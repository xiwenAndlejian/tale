INSERT INTO tale.t_contents (cid, title, slug, thumb_img, created, modified, content, author_id, type, status, fmt_type, tags, categories, hits, comments_num, allow_comment, allow_ping, allow_feed) VALUES (1, '关于', 'about', null, 1487853610, 1487872488, '### Hello World

这是我的关于页面

### 当然还有其他

具体你来写点什么吧', 1, 'page', 'publish', 'markdown', null, null, 209, 0, 1, 1, 1);
INSERT INTO tale.t_contents (cid, title, slug, thumb_img, created, modified, content, author_id, type, status, fmt_type, tags, categories, hits, comments_num, allow_comment, allow_ping, allow_feed) VALUES (2, '第一篇文章', null, null, 1487861184, 1487872798, '## Hello  World.

> 第一篇文章总得写点儿什么?...

----------


<!--more-->

```java
public static void main(String[] args){
    System.out.println("Hello Tale.");
}
```', 1, 'post', 'publish', 'markdown', '', '默认分类', 17, 0, 1, 1, 1);
INSERT INTO tale.t_contents (cid, title, slug, thumb_img, created, modified, content, author_id, type, status, fmt_type, tags, categories, hits, comments_num, allow_comment, allow_ping, allow_feed) VALUES (3, '友情链接', 'links', null, 1505643727, 1505643888, '## 友情链接

- :lock: [王爵的技术博客]()
- :lock: [cyang.tech]()
- :lock: [Bakumon''s Blog]()

## 链接须知

> 请确定贵站可以稳定运营
> 原创博客优先，技术类博客优先，设计、视觉类博客优先
> 经常过来访问和评论，眼熟的

备注：默认申请友情链接均为内页（当前页面）

## 基本信息

                网站名称：Tale博客
                网站地址：https://tale.biezhi.me

请在当页通过评论来申请友链，其他地方不予回复

暂时先这样，同时欢迎互换友链，这个页面留言即可。 ^_^

还有，我会不定时对无法访问的网址进行清理，请保证自己的链接长期有效。', 1, 'page', 'publish', 'markdown', null, null, 191, 0, 1, 1, null);
INSERT INTO tale.t_contents (cid, title, slug, thumb_img, created, modified, content, author_id, type, status, fmt_type, tags, categories, hits, comments_num, allow_comment, allow_ping, allow_feed) VALUES (23, 'tale修改日志-Sqlite转MySQL（一）', 'tale-1', null, 1516022203, 1519780863, '<p>
                </p><p>
                </p><p>
                </p><p>
                </p><p>
                </p><p>
                </p><p>
                </p><p>
                    </p><p class="post-tags"></p><p>
        </p><h1 id="directory0221050336397428551">Sqlite转MySQL（一）建表语句&amp;Java源码修改</h1><p>为什么想要使用MySQL：由于Sqlite表无法实现远程网络访问，实时数据查询起来极其不方便，因此修改数据库为MySQL。<br data-mce-bogus="1"></p><h2 id="directory0221050336397428552">建表语句</h2><p>而Sqlite与MySQL的有部分建表语句并不通用，需要修改一下才能使用对应的源码。</p><p>如下表作为例子表示tale建表语句中中Sqlite和MySQL的区别<br data-mce-bogus="1"></p><p><strong>Sqlite</strong></p><pre class=" language-sql" contenteditable="false">CREATE TABLE t_attach (
  id        INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, #Sqlite 中AUTOINCREMENT表示自增长，不与MySQL中通用
};
...
CREATE TALBE t_users (
  ﻿uid INTEGER UNSIGNED PRIMARY KEY AUTOINCREMENT NOT NULL #由于JAVA源码中没有生成主键，需要设置主键为自增长
);</pre><p><strong>MySQL</strong>﻿</p><pre class="language-sql" contenteditable="false">CREATE TABLE t_attach (
  id        INTEGER PRIMARY KEY AUTO_INCREMENT NOT NULL,
  ...
);
...
CREATE TALBE t_users (
  ﻿uid INTEGER UNSIGNED PRIMARY KEY AUTO_INCREMENT NOT NULL,
  ...﻿
);</pre><p><code></code></p><h2 id="directory0221050336397428553">源码修改</h2><p><b>WebContext.java(修改):</b><br></p><pre class=" language-java" contenteditable="false">@Override
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">preHandle</span><span class="token punctuation">(</span>Blade blade<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    Ioc ioc <span class="token operator">=</span> blade<span class="token punctuation">.</span><span class="token function">ioc</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

    <span class="token keyword">boolean</span> devMode <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>blade<span class="token punctuation">.</span><span class="token function">environment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasKey</span><span class="token punctuation">(</span><span class="token string">"app.dev"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        devMode <span class="token operator">=</span> blade<span class="token punctuation">.</span><span class="token function">environment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBoolean</span><span class="token punctuation">(</span><span class="token string">"app.dev"</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>blade<span class="token punctuation">.</span><span class="token function">environment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasKey</span><span class="token punctuation">(</span><span class="token string">"app.devMode"</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        devMode <span class="token operator">=</span> blade<span class="token punctuation">.</span><span class="token function">environment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getBoolean</span><span class="token punctuation">(</span><span class="token string">"app.devMode"</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    DBInit<span class="token punctuation">.</span><span class="token function">jdbcConnTest</span><span class="token punctuation">(</span>blade<span class="token punctuation">.</span><span class="token function">environment</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">//TODO 初始化数据实现</span>
	<span class="token comment" spellcheck="true">//SqliteJdbc.importSql(devMode);</span>
	<span class="token comment" spellcheck="true">//Sql2o sql2o = new Sql2o(SqliteJdbc.DB_SRC, null, null);</span>
    <span class="token comment" spellcheck="true">//更换了sql2o的创建参数，具体见下</span>
    Sql2o sql2o <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Sql2o</span><span class="token punctuation">(</span>DBInit<span class="token punctuation">.</span>url<span class="token punctuation">,</span> DBInit<span class="token punctuation">.</span>user<span class="token punctuation">,</span> DBInit<span class="token punctuation">.</span>password<span class="token punctuation">)</span><span class="token punctuation">;</span>
    Base<span class="token punctuation">.</span><span class="token function">open</span><span class="token punctuation">(</span>sql2o<span class="token punctuation">)</span><span class="token punctuation">;</span>
    Commons<span class="token punctuation">.</span><span class="token function">setSiteService</span><span class="token punctuation">(</span>ioc<span class="token punctuation">.</span><span class="token function">getBean</span><span class="token punctuation">(</span>SiteService<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></pre><p><strong>DBInit.java(新增):</strong><br></p><pre class=" language-java" contenteditable="false"><span class="token keyword">package</span> com<span class="token punctuation">.</span>tale<span class="token punctuation">.</span>init<span class="token punctuation">;</span>

<span class="token keyword">import</span> com<span class="token punctuation">.</span>blade<span class="token punctuation">.</span>Environment<span class="token punctuation">;</span>
<span class="token keyword">import</span> lombok<span class="token punctuation">.</span>NoArgsConstructor<span class="token punctuation">;</span>
<span class="token keyword">import</span> lombok<span class="token punctuation">.</span>extern<span class="token punctuation">.</span>slf4j<span class="token punctuation">.</span>Slf4j<span class="token punctuation">;</span>

<span class="token keyword">import</span> java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>Connection<span class="token punctuation">;</span>
<span class="token keyword">import</span> java<span class="token punctuation">.</span>sql<span class="token punctuation">.</span>DriverManager<span class="token punctuation">;</span>

<span class="token comment" spellcheck="true">/**
 * 标题：DBInit&lt;br&gt;
 * 功能说明：数据库初始化&lt;br&gt;
 * 系统版本：v1.0&lt;br&gt;
 * 开发人员： ganxiang &lt;br&gt;
 * 开发时间：2018年01月08日 22:24&lt;br&gt;
 */</span>
@Slf4j
@NoArgsConstructor
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">DBInit</span> <span class="token punctuation">{</span>

    <span class="token keyword">public</span> <span class="token keyword">static</span> String className<span class="token punctuation">;</span> <span class="token comment" spellcheck="true">//数据库驱动类名</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> String user<span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">//数据库用户名</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> String password<span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">//密码</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> String url<span class="token punctuation">;</span>       <span class="token comment" spellcheck="true">//数据库连接url（此项需要包含utf-8设置，否则容易乱码）</span>

    <span class="token comment" spellcheck="true">/**
     * jdbc连接测试
     *
     * @param environment 服务设置
     */</span>
    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">jdbcConnTest</span><span class="token punctuation">(</span>Environment environment<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">try</span> <span class="token punctuation">{</span>
            className <span class="token operator">=</span> environment<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"jdbc.driverClassName"</span><span class="token punctuation">,</span> <span class="token string">"com.mysql.jdbc.Driver"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            user <span class="token operator">=</span> environment<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"jdbc.user"</span><span class="token punctuation">,</span> <span class="token string">"tale"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            password <span class="token operator">=</span> environment<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"jdbc.password"</span><span class="token punctuation">,</span> <span class="token string">"123456"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            url <span class="token operator">=</span> environment<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"jdbc.url"</span><span class="token punctuation">,</span> <span class="token string">"jdbc:mysql://127.0.0.1:3306/tale?useUnicode=true&amp;characterEncoding=UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

            <span class="token comment" spellcheck="true">//加载驱动类</span>
            Class<span class="token punctuation">.</span><span class="token function">forName</span><span class="token punctuation">(</span>className<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">//获取连接</span>
            Connection con <span class="token operator">=</span>
                    DriverManager<span class="token punctuation">.</span><span class="token function">getConnection</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> user<span class="token punctuation">,</span> password<span class="token punctuation">)</span><span class="token punctuation">;</span>

            log<span class="token punctuation">.</span><span class="token function">info</span><span class="token punctuation">(</span><span class="token string">"db schema:"</span><span class="token punctuation">,</span> con<span class="token punctuation">.</span><span class="token function">getSchema</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">{</span>
            log<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"load dataSource error :"</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>

    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</pre><p><br></p><p>
                </p><p>
            </p><p>
            </p><p>
            </p><p>
            </p><p>至此：我们已经修改了系统内部sql2o的创建方式，但仍需针对MySQL增加相应配置项才能启动，详细介绍见下文。</p><p>
            </p><p>
            </p><p>
            </p>', 3, 'post', 'publish', 'markdown', '', 'tale', 65, 1, 1, 1, 1);
INSERT INTO tale.t_contents (cid, title, slug, thumb_img, created, modified, content, author_id, type, status, fmt_type, tags, categories, hits, comments_num, allow_comment, allow_ping, allow_feed) VALUES (25, '每日算法：循环单词', null, null, 1519657246, 1519657246, '<h1> 循环单词</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://www.lintcode.com/zh-cn/problem/rotate-words/#">在线地址</a></p><h2> 题目内容</h2><p style="margin-top: 0px; margin-bottom: 10px; color: rgb(113, 113, 113); font-family: &quot;open sans&quot;, &quot;helvetica neue&quot;, Helvetica, Arial, sans-serif;">The words are same rotate words if rotate the word to the right by loop, and get another. Count how many different rotate word sets in dictionary.</p><p style="margin-top: 0px; margin-bottom: 10px; color: rgb(113, 113, 113); font-family: &quot;open sans&quot;, &quot;helvetica neue&quot;, Helvetica, Arial, sans-serif;">E.g. picture and turepic are same rotate words.</p><p style="margin-top: 0px; margin-bottom: 10px; color: rgb(113, 113, 113); font-family: &quot;open sans&quot;, &quot;helvetica neue&quot;, Helvetica, Arial, sans-serif;">大意：给予一个字符串数组，判断内部不同种类的单词的个数，其中如果一个单词通过右旋可以得到另一个单词，则这两个单词是类似的。eg: pictrue 与 turepic</p><p style="margin-top: 0px; margin-bottom: 10px; color: rgb(113, 113, 113); font-family: &quot;open sans&quot;, &quot;helvetica neue&quot;, Helvetica, Arial, sans-serif;"><br data-mce-bogus="1"></p><h2 data-mce-style="margin-top: 0px; margin-bottom: 10px; color: #717171; font-family: ''open sans'', ''helvetica neue'', Helvetica, Arial, sans-serif;" style="margin-top: 0px; margin-bottom: 10px;"> 样例</h2><p style="margin-bottom: 10px; color: rgb(113, 113, 113); font-family: &quot;open sans&quot;, &quot;helvetica neue&quot;, Helvetica, Arial, sans-serif;">Given dict =&nbsp;<code style="font-size: 12.6px; white-space: nowrap;">["picture", "turepic", "icturep", "word", "ordw", "lint"]</code><br>return&nbsp;<code style="font-size: 12.6px; white-space: nowrap;">3</code>.</p><p style="margin-top: 0px; margin-bottom: 10px; color: rgb(113, 113, 113); font-family: &quot;open sans&quot;, &quot;helvetica neue&quot;, Helvetica, Arial, sans-serif;"><code style="font-size: 12.6px; white-space: nowrap;">"picture", "turepic", "icturep"</code>&nbsp;are same ratote words.<br><code style="font-size: 12.6px; white-space: nowrap;">"word", "ordw"</code>&nbsp;are same too.<br><code style="font-size: 12.6px; white-space: nowrap;">"lint"</code>&nbsp;is the third word that different from the previous two words.</p><p style="margin-top: 0px; margin-bottom: 10px; color: rgb(113, 113, 113); font-family: &quot;open sans&quot;, &quot;helvetica neue&quot;, Helvetica, Arial, sans-serif;"><br></p><h2 data-mce-style="margin-top: 0px; margin-bottom: 10px; color: #717171; font-family: ''open sans'', ''helvetica neue'', Helvetica, Arial, sans-serif;" style="margin-top: 0px; margin-bottom: 10px; font-family: &quot;open sans&quot;, &quot;helvetica neue&quot;, Helvetica, Arial, sans-serif;">解法1</h2><h3>思路</h3><p>从如何判断两个单词是否类似入手，先假设一个单词为：原=左+右，则右旋后的单词为：后=右+左。</p><p>那么再在这个单词后拼接一个相同的单词：原+原 = 左+右+左+右= 左+后+右</p><p>可以看出：拼接后的单词字符串中包含了右旋后的单词，并且不论字符串左右的具体内容，上式都是成立的。</p><h3> 代码</h3><pre class=" language-java" contenteditable="false"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">countRotateWords</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span> words<span class="token punctuation">)</span> <span class="token punctuation">{</span>
<span class="token comment" spellcheck="true">// Write your code here</span>
<span class="token comment" spellcheck="true">// 存放不相似的字符串</span>
HashSet<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token operator">&lt;</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">for</span> <span class="token punctuation">(</span>String str1 <span class="token operator">:</span> words<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment" spellcheck="true">//是否相似的标志</span>
    <span class="token keyword">boolean</span> flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>String str2 <span class="token operator">:</span> set<span class="token punctuation">)</span>
        <span class="token comment" spellcheck="true">//注意：长度相等才进行左旋判断</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>str2<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> str1<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">isSame</span><span class="token punctuation">(</span>str1<span class="token punctuation">,</span> str2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>flag<span class="token punctuation">)</span>
        set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> set<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">//判断两个字符串是否相似</span>
<span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">boolean</span> <span class="token function">isSame</span><span class="token punctuation">(</span>String str1<span class="token punctuation">,</span> String str2<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    String temp <span class="token operator">=</span> str1 <span class="token operator">+</span> str1<span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">//将其中一个字符串相加，因为任意字符串的左旋相加之后的字符串，一定包含原字符串</span>
    <span class="token keyword">return</span> temp<span class="token punctuation">.</span><span class="token function">indexOf</span><span class="token punctuation">(</span>str2<span class="token punctuation">)</span> <span class="token operator">&gt;=</span> <span class="token number">0</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></pre><p>测试结果，答案基本能通过，但是lintcode最后一个测试中包含了大量的测试数据，会超出他的空间要求，无法通过。</p><h2> 解法2</h2><p>上网查询了一下正确的解法，但是暂时不明白为什么这个解法能通过</p><h3>思路&nbsp;</h3><p>将不相似的字符串存放在hashset中，从字符数组中取出字符串，按位右旋，判断右旋后的字符串是否存在hashset中。</p><p>猜测1.是利用了hashset的查询效率。</p><p>猜测2.是因为substring方法其实没有额外的创建字符数组。</p><h3> 代码</h3><h3>&nbsp;</h3><pre class=" language-java" contenteditable="false"><span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">countRotateWords</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span> words<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment" spellcheck="true">// Write your code here</span>
    <span class="token comment" spellcheck="true">//存放不相似的字符串</span>
    HashSet<span class="token operator">&lt;</span>String<span class="token operator">&gt;</span> set <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashSet</span><span class="token operator">&lt;</span><span class="token operator">&gt;</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span>String str1 <span class="token operator">:</span> words<span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">boolean</span> flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//按位右旋</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> l <span class="token operator">=</span> str1<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            String str2 <span class="token operator">=</span> str1<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> l <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">+</span> str1<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token keyword">if</span> <span class="token punctuation">(</span>set<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>str2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
                flag <span class="token operator">=</span> <span class="token boolean">true</span><span class="token punctuation">;</span>
                <span class="token keyword">break</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>
        <span class="token punctuation">}</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>flag<span class="token punctuation">)</span>
            set<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> set<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></pre><p><br><br data-mce-bogus="1"></p><p>
            </p>', 3, 'post', 'publish', 'markdown', '算法,字符串', '算法', 0, 0, 1, 1, 1);
INSERT INTO tale.t_contents (cid, title, slug, thumb_img, created, modified, content, author_id, type, status, fmt_type, tags, categories, hits, comments_num, allow_comment, allow_ping, allow_feed) VALUES (26, '每日算法：落单的数', 'single-number', null, 1519658128, 1519658128, '<h1> 落单的数</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://www.lintcode.com/zh-cn/problem/single-number/">在线地址</a></p><p></p><h2>题目内容</h2><p><span style="color: rgb(113, 113, 113); font-family: &quot;open sans&quot;, &quot;helvetica neue&quot;, Helvetica, Arial, sans-serif;">给出2*n + 1&nbsp;个的数字，除其中一个数字之外其他每个数字均出现两次，找到这个数字。</span><br></p><h2>样例</h2><p><span style="color: rgb(113, 113, 113); font-family: &quot;open sans&quot;, &quot;helvetica neue&quot;, Helvetica, Arial, sans-serif;">给出</span><b style="color: rgb(113, 113, 113); font-family: &quot;open sans&quot;, &quot;helvetica neue&quot;, Helvetica, Arial, sans-serif;"><font color="#e76363">&nbsp;[1,2,2,1,3,4,3]</font></b><span style="color: rgb(113, 113, 113); font-family: &quot;open sans&quot;, &quot;helvetica neue&quot;, Helvetica, Arial, sans-serif;">，返回 4</span></p><p></p><h2>解法1：暴力解法</h2><h3>思路</h3><p>创建一个Map，键为Integer的数字，而值为它出现的次数，再遍历取出出现次数为1的。</p><h3>代码</h3><p>太过暴力，省略。</p><h2>解法2：位运算</h2><p>在做这道题之前，需要了解一下位运算的相关知识</p><blockquote><p>^(异或)对于数有以下规律：a^a=0，a^a^b=b，且a^b^a=b=b^a^a。</p></blockquote><h3>思路</h3><p>因此根据以上规律，我们可以遍历数组，将数不断异或，最后的结果一定就是只在数组中出现一次的那个数字。</p><h3>代码</h3><pre class="language-java" contenteditable="false"><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">singleNumber</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> A<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">int</span> rst <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token comment" spellcheck="true">//遍历数组，异或求结果</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">:</span> A<span class="token punctuation">)</span>
        rst <span class="token operator">^=</span> i<span class="token punctuation">;</span>
    <span class="token keyword">return</span> rst<span class="token punctuation">;</span>
<span class="token punctuation">}</span></pre><p></p><p><br></p><p></p><p>
            </p>', 3, 'post', 'publish', 'markdown', '算法,落单的数,位运算', '算法', 3, 0, 1, 1, 1);
INSERT INTO tale.t_contents (cid, title, slug, thumb_img, created, modified, content, author_id, type, status, fmt_type, tags, categories, hits, comments_num, allow_comment, allow_ping, allow_feed) VALUES (27, '每日算法：落单的数2', 'single-number-ii', null, 1519659120, 1519659120, '<h1> 落单的数2</h1><p>在前面的文章中，我介绍了落单的数，它还有相似的题目，只是解题的方法又有新的变化。</p><p>&nbsp; &nbsp;&nbsp;<a href="http://www.lintcode.com/zh-cn/problem/single-number-ii/">在线地址</a></p><p></p><h2>题目内容</h2><p><span style="color: rgb(113, 113, 113); font-family: &quot;open sans&quot;, &quot;helvetica neue&quot;, Helvetica, Arial, sans-serif;">给出3*n + 1 个的数字，除其中一个数字之外其他每个数字均出现三次，找到这个数字。</span><br></p><h2>样例</h2><p><span style="color: rgb(113, 113, 113); font-family: &quot;open sans&quot;, &quot;helvetica neue&quot;, Helvetica, Arial, sans-serif;">给出</span><b style="color: rgb(113, 113, 113); font-family: &quot;open sans&quot;, &quot;helvetica neue&quot;, Helvetica, Arial, sans-serif;"><font color="#e76363">&nbsp;[1,1,2,3,3,3,2,2,4,1]</font></b><span style="color: rgb(113, 113, 113); font-family: &quot;open sans&quot;, &quot;helvetica neue&quot;, Helvetica, Arial, sans-serif;">&nbsp;，返回 4</span></p><h2><span style="color: rgb(113, 113, 113); font-family: &quot;open sans&quot;, &quot;helvetica neue&quot;, Helvetica, Arial, sans-serif;">解法</span></h2><p>目前似乎无法使用落单的数中的遍历异或，因为每个数都出现了奇数次，那么如何解决？</p><h3>思路</h3><p>利用位运算的思路，我们创建一个长度为32的int数组（Java中int有32个bit位）。</p><p>遍历数组。累加每一位2进制位上的值，并对这个值取3对它的模。</p><p>最后再将这个数组合成一个int。</p><h3>代码</h3><pre class="language-java" contenteditable="false"><span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">singleNumberII</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> A<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment" spellcheck="true">// write your code here</span>
    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> bits  <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token keyword">int</span> result <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">32</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> A<span class="token punctuation">.</span>length<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token comment" spellcheck="true">//取得当前数字二进制的第i位上的值，并累加</span>
            bits<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token punctuation">(</span>A<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;&gt;</span> i<span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">;</span>
            <span class="token comment" spellcheck="true">//取3对这个和的模</span>
            bits<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">%=</span> <span class="token number">3</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        result <span class="token operator">|=</span> bits<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;&lt;</span> i<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token keyword">return</span> result<span class="token punctuation">;</span>
<span class="token punctuation">}</span></pre><p></p><h2><span style="color: rgb(113, 113, 113); font-family: &quot;open sans&quot;, &quot;helvetica neue&quot;, Helvetica, Arial, sans-serif;"><br></span></h2><p><br></p><p></p><p></p><p>
            </p>', 3, 'post', 'publish', 'markdown', '算法,落单的数,位运算', '算法', 6, 0, 1, 1, 1);
INSERT INTO tale.t_contents (cid, title, slug, thumb_img, created, modified, content, author_id, type, status, fmt_type, tags, categories, hits, comments_num, allow_comment, allow_ping, allow_feed) VALUES (28, '每日算法：整数排序（选择&插入）', 'sort-integers', null, 1519742601, 1519745086, '<p>
                </p><h1>整数排序（选择&amp;插入）</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://www.lintcode.com/zh-cn/problem/sort-integers/">在线地址</a><br></p><h2>题目内容</h2><p><span style="color: rgb(113, 113, 113); font-family: &quot;open sans&quot;, &quot;helvetica neue&quot;, Helvetica, Arial, sans-serif;">给一组整数，按照升序排序，使用选择排序，冒泡排序，插入排序或者任何 O(n</span><span style="position: relative; font-size: 12px; line-height: 0; vertical-align: baseline; top: -0.5em; color: rgb(113, 113, 113); font-family: &quot;open sans&quot;, &quot;helvetica neue&quot;, Helvetica, Arial, sans-serif;">2</span><span style="color: rgb(113, 113, 113); font-family: &quot;open sans&quot;, &quot;helvetica neue&quot;, Helvetica, Arial, sans-serif;">) 的排序算法。</span></p><h2>样例</h2><p><span style="color: rgb(113, 113, 113); font-family: &quot;open sans&quot;, &quot;helvetica neue&quot;, Helvetica, Arial, sans-serif;">对于数组&nbsp;</span><code style="font-size: 12.6px; white-space: nowrap;">[3, 2, 1, 4, 5]</code><span style="color: rgb(113, 113, 113); font-family: &quot;open sans&quot;, &quot;helvetica neue&quot;, Helvetica, Arial, sans-serif;">, 排序后为：</span><code style="font-size: 12.6px; white-space: nowrap;">[1, 2, 3, 4, 5]</code></p><h2>解法1：选择排序 O(n^2)</h2><h3>思路</h3><p>首先，选出数组中最小的那个元素，然后将这个元素与数组第一个元素进行位置交换。</p><p>接着，在剩下的数组中选出最小的那个元素，同样与剩下的数组中第一个元素进行位置交换。</p><p>如此往复，直至数组剩下最后一个元素。</p><h3>效率分析</h3><p>假设需要排序的数组长度为 n， 那么从选出第一个元素（数组中最小的）我们需要进行 n-1次比较，第二个需要 n-2次。</p><p>那么选择排序一共需要比较的次数为 = (n-1) + (n-2) +··· + 2 + 1 = n(n-1)/2 ~n^2/2。 （注：~表示约等于）</p><h3>代码</h3><pre class="language-java" contenteditable="false"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span> l <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">int</span> min <span class="token operator">=</span> i<span class="token punctuation">;</span>
        <span class="token comment" spellcheck="true">//找到数组中最小元素的位置</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
            <span class="token keyword">if</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&lt;</span> nums<span class="token punctuation">[</span>min<span class="token punctuation">]</span><span class="token punctuation">)</span>
                min <span class="token operator">=</span> j<span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
        <span class="token comment" spellcheck="true">//交换元素</span>
        <span class="token function">exch</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> i<span class="token punctuation">,</span> min<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span></pre><h2>解法2：插入排序 O(n^2)</h2><h3>思路</h3><p>首先，从数组的第二个元素开始，与第一个相比较，如果小于，则交换这两个元素的位置。</p><p>接着，从第三个元素开始，与第二个相比较，如果小于，则交换这两个元素的位置。</p><p>如果进行了交换，则交换后再与第一个元素相比较，如果小于，则也交换位置，如果大于，则进行下一个元素的交换&amp;比较。</p><p>如此往复，直到最后一个元素完成比较与交换。</p><h3>效率分析</h3><p>因为插入排序受输入数组影响较大。</p><p>如果输入数组本身是有序的，则只需要进行 n-1 次比较，0 次交换。</p><p>而输入数组本身是反序的，则需要进行 n(n-1)/2 ~n^2 次比较,&nbsp; n(n-1)/2 ~n^2次交换。</p><p>因此平均下来，插入排序需要进行 ~N^2/4 次比较, ~N^2/4次交换。</p><h3>代码</h3><pre class="language-java" contenteditable="false"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> l <span class="token operator">=</span> nums<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i <span class="token operator">&lt;</span> l<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
        <span class="token comment" spellcheck="true">//插入排序，当前元素 &gt; 上一个元素时，结束交换</span>
        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> i<span class="token punctuation">;</span> j <span class="token operator">&gt;</span> <span class="token number">0</span> <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">&gt;</span> nums<span class="token punctuation">[</span>j<span class="token operator">--</span><span class="token punctuation">]</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span>
                <span class="token function">exch</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></pre><p><br data-mce-bogus="1"></p><p>
            </p>', 3, 'post', 'publish', 'markdown', '算法,排序', '算法', 1, 0, 1, 1, 1);
INSERT INTO tale.t_contents (cid, title, slug, thumb_img, created, modified, content, author_id, type, status, fmt_type, tags, categories, hits, comments_num, allow_comment, allow_ping, allow_feed) VALUES (29, '每日算法：整数排序（归并排序）', 'sort-integers-ii-merge', null, 1519833339, 1519870830, '<p>
                </p><h1>整数排序II之归并排序</h1><p>&nbsp; &nbsp;&nbsp;<a href="http://www.lintcode.com/zh-cn/problem/sort-integers-ii/">在线地址</a></p><p></p><h2>题目内容</h2><p><span style="color: rgb(113, 113, 113); font-family: &quot;open sans&quot;, &quot;helvetica neue&quot;, Helvetica, Arial, sans-serif;">给一组整数，按照升序排序。使用归并排序，快速排序，堆排序或者任何其他 O(</span><em style="color: rgb(113, 113, 113); font-family: &quot;open sans&quot;, &quot;helvetica neue&quot;, Helvetica, Arial, sans-serif;">n</em><span style="color: rgb(113, 113, 113); font-family: &quot;open sans&quot;, &quot;helvetica neue&quot;, Helvetica, Arial, sans-serif;">&nbsp;log&nbsp;</span><em style="color: rgb(113, 113, 113); font-family: &quot;open sans&quot;, &quot;helvetica neue&quot;, Helvetica, Arial, sans-serif;">n</em><span style="color: rgb(113, 113, 113); font-family: &quot;open sans&quot;, &quot;helvetica neue&quot;, Helvetica, Arial, sans-serif;">) 的排序算法。</span></p><h2>样例</h2><p><span style="color: rgb(113, 113, 113); font-family: &quot;open sans&quot;, &quot;helvetica neue&quot;, Helvetica, Arial, sans-serif;">给出&nbsp;</span><code style="font-size: 12.6px; white-space: nowrap;">[3, 2, 1, 4, 5]</code><span style="color: rgb(113, 113, 113); font-family: &quot;open sans&quot;, &quot;helvetica neue&quot;, Helvetica, Arial, sans-serif;">, 排序后的结果为&nbsp;</span><code style="font-size: 12.6px; white-space: nowrap;">[1, 2, 3, 4, 5]</code><span style="color: rgb(113, 113, 113); font-family: &quot;open sans&quot;, &quot;helvetica neue&quot;, Helvetica, Arial, sans-serif;">。</span></p><h2>解法：归并排序之递归实现</h2><blockquote>归并排序：先递归将数组切分成两半分别排序，然后再将结果归并起来</blockquote><p>优势：递归数组对于任意长度为N的数组排序所需要的时间和NlogN成正比。</p><p>缺点：他所需要的额外空间与N成正比。</p><h3>思路</h3><p>首先：不断切分数组，直至数组长度小于等于2</p><p>接着：将切分后的结果归并，并排序。</p><h4>范例：</h4><p>对于输出：C H B A D K （N=6）进行排序。</p><p>第一步：切分数组，C H B <b>|</b> A D K</p><p>第二步：继续切分，C H <b>| </b>B <b>| </b>A D <b>| </b>K</p><p>第三步：排序&amp;归并，B C H <b>|</b> A D K</p><p>第四步：排序&amp;归并，A B C D H K</p><h3>代码</h3><pre class="language-java" contenteditable="false"><span class="token comment" spellcheck="true">//额外的N空间</span>
<span class="token keyword">private</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> temp<span class="token punctuation">;</span>
<span class="token comment" spellcheck="true">/*
 * @param A: an integer array
 * @return: 
 */</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">sortIntegers2</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> A<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment" spellcheck="true">// write your code here</span>
    temp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">int</span><span class="token punctuation">[</span>A<span class="token punctuation">.</span>length<span class="token punctuation">]</span><span class="token punctuation">;</span>
    <span class="token function">sort</span><span class="token punctuation">(</span>A<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> A<span class="token punctuation">.</span>length <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">//递归的归并排序，对数组[start, end]区间进行排序</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">sort</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> start<span class="token punctuation">,</span> <span class="token keyword">int</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>start <span class="token operator">&gt;=</span> end<span class="token punctuation">)</span>
		<span class="token keyword">return</span><span class="token punctuation">;</span>
	<span class="token keyword">int</span> mid <span class="token operator">=</span> start <span class="token operator">+</span> <span class="token punctuation">(</span>end <span class="token operator">-</span> start<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span>
	<span class="token comment" spellcheck="true">//左右进行分割，直到左右区间长度为1或0</span>
	<span class="token function">sort</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> start<span class="token punctuation">,</span> mid<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">sort</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment" spellcheck="true">//归并分割的结果</span>
	<span class="token function">merge</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> start<span class="token punctuation">,</span> mid<span class="token punctuation">,</span> end<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">//对数组[start, end]区间进行归并</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">merge</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> start<span class="token punctuation">,</span> <span class="token keyword">int</span> mid<span class="token punctuation">,</span> <span class="token keyword">int</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	
	<span class="token keyword">int</span> i <span class="token operator">=</span> start<span class="token punctuation">,</span> j <span class="token operator">=</span> mid <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
	<span class="token comment" spellcheck="true">//填充临时数组</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> start<span class="token punctuation">;</span> k <span class="token operator">&lt;=</span> end<span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span>
		temp<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token comment" spellcheck="true">//归并结果</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> k <span class="token operator">=</span> start<span class="token punctuation">;</span> k <span class="token operator">&lt;=</span> end<span class="token punctuation">;</span> k<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
		<span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&gt;</span> mid<span class="token punctuation">)</span>	nums<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">[</span>j<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">&gt;</span> end<span class="token punctuation">)</span> nums<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>temp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&gt;</span> temp<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> nums<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">[</span>j<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
		<span class="token keyword">else</span> nums<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">[</span>i<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span>

<span class="token punctuation">}</span></pre><p><br></p><p><br></p><p><br></p><p>
            </p>', 3, 'post', 'publish', 'html', '算法,排序,归并排序', '算法', 1, 0, 1, 1, 1);
INSERT INTO tale.t_contents (cid, title, slug, thumb_img, created, modified, content, author_id, type, status, fmt_type, tags, categories, hits, comments_num, allow_comment, allow_ping, allow_feed) VALUES (30, '每日算法：恢复旋转排序数组', 'recover-rotated-sorted-array', null, 1520265124, 1520265124, '<h1>恢复旋转排序数组</h1><p>&nbsp;&nbsp;&nbsp;&nbsp;<a href="http://www.lintcode.com/zh-cn/problem/recover-rotated-sorted-array/">在线地址</a></p><p></p><h2>题目内容</h2><p><span style="color: rgb(113, 113, 113); font-family: &quot;open sans&quot;, &quot;helvetica neue&quot;, Helvetica, Arial, sans-serif;">给定一个</span><strong style="color: rgb(113, 113, 113); font-family: &quot;open sans&quot;, &quot;helvetica neue&quot;, Helvetica, Arial, sans-serif;">旋转</strong><span style="color: rgb(113, 113, 113); font-family: &quot;open sans&quot;, &quot;helvetica neue&quot;, Helvetica, Arial, sans-serif;">排序数组，在原地恢复其排序。</span><br></p><p></p><h2>样例</h2><p><code style="font-size: 12.6px; white-space: nowrap;">[4, 5, 1, 2, 3]</code><span style="color: rgb(113, 113, 113); font-family: &quot;open sans&quot;, &quot;helvetica neue&quot;, Helvetica, Arial, sans-serif;">&nbsp;-&gt;&nbsp;</span><code style="font-size: 12.6px; white-space: nowrap;">[1, 2, 3, 4, 5]</code><br></p><h2>挑战</h2><p><span style="color: rgb(113, 113, 113); font-family: &quot;open sans&quot;, &quot;helvetica neue&quot;, Helvetica, Arial, sans-serif;">使用O(1)的额外空间和O(</span><em style="color: rgb(113, 113, 113); font-family: &quot;open sans&quot;, &quot;helvetica neue&quot;, Helvetica, Arial, sans-serif;">n</em><span style="color: rgb(113, 113, 113); font-family: &quot;open sans&quot;, &quot;helvetica neue&quot;, Helvetica, Arial, sans-serif;">)时间复杂度</span></p><h2>解法</h2><p>还原这样的旋转排序数组（长度为N），我们有一个非常方便的方法：</p><p>1. 获取数组开始旋转的节点位置（X）</p><p>2. 进行3次翻转，假定旋转数组为（ [4, 5, 1, 2, 3] ）</p><p>&nbsp; &nbsp; 1. 从 0 至 X 处翻转；（此时数组 [0, X] 从顺序递增，变为顺序递减 -&gt; [<font color="#ff0000">5</font>, <font color="#ff0000">4</font>, 1, 2, 3]）</p><p>&nbsp; &nbsp; 2. 从 X+1 至 N-1 处翻转；（此时数组 [X+1, N-1] 从顺序递增，变为顺序递减 -&gt; [5, 4, <font color="#ff0000">3</font>, 2, <font color="#ff0000">1</font>]）</p><p>&nbsp; &nbsp; 3. 从 0 至 N-1 处翻转。(此时数组从递减，变为递增 -&gt; [<font color="#ff0000">1</font>,&nbsp;<font color="#ff0000">2</font>,&nbsp;3,&nbsp;<font color="#ff0000">4</font>,&nbsp;<font color="#ff0000">5</font>])</p><h3>效率分析</h3><p>第一步：获取节点位置需要访问至少2次数组，至多 2(N-1) 次（N&gt;=2），因此需要访问 N 次数组。</p><p>第二步：根据数组长度的奇偶性不同，需要 2N 次（偶数）或 2(N-1) 次（奇数）数组访问。</p><p>因此一共需要 ~3N 次数组访问。</p><h3>代码</h3><pre class="language-java" contenteditable="false"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">recoverRotatedSortedArray</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span>Integer<span class="token operator">&gt;</span> nums<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>
	<span class="token comment" spellcheck="true">//获取旋转的节点</span>
	
	<span class="token keyword">while</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;</span> nums<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span> <span class="token operator">&amp;&amp;</span> nums<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> nums<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
		i<span class="token operator">++</span><span class="token punctuation">;</span>

	<span class="token function">revert</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>   i<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">revert</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span> nums<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token function">revert</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span>   nums<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	
<span class="token punctuation">}</span>
<span class="token comment" spellcheck="true">//翻转数组，区间从 start 到 end</span>
<span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">revert</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span>Integer<span class="token operator">&gt;</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> start<span class="token punctuation">,</span> <span class="token keyword">int</span> end<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">int</span> length <span class="token operator">=</span> end <span class="token operator">-</span> start <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>
	<span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> length<span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>
		<span class="token function">swap</span><span class="token punctuation">(</span>nums<span class="token punctuation">,</span> start <span class="token operator">+</span> i<span class="token punctuation">,</span> end <span class="token operator">-</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token comment" spellcheck="true">//通过异或交换数组两个位置上的元素</span>
<span class="token keyword">private</span> <span class="token keyword">void</span> <span class="token function">swap</span><span class="token punctuation">(</span>List<span class="token operator">&lt;</span>Integer<span class="token operator">&gt;</span> nums<span class="token punctuation">,</span> <span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span> <span class="token punctuation">{</span>
	nums<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> nums<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token operator">^</span> nums<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	nums<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> nums<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token operator">^</span> nums<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	nums<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> nums<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span> <span class="token operator">^</span> nums<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span></pre><p><br></p><p><span style="color: rgb(113, 113, 113); font-family: &quot;open sans&quot;, &quot;helvetica neue&quot;, Helvetica, Arial, sans-serif;"><br></span><br></p><p>
            </p>', 3, 'post', 'publish', 'html', '算法,数组,排序数组', '算法', 1, 0, 1, 1, 1);
INSERT INTO tale.t_contents (cid, title, slug, thumb_img, created, modified, content, author_id, type, status, fmt_type, tags, categories, hits, comments_num, allow_comment, allow_ping, allow_feed) VALUES (31, 'springboot学习笔记-集成mongodb', null, null, 1524225958, 1524271995, '
                <h2 class="md-end-block md-heading" style="box-sizing: border-box; font-size: 2.29rem; line-height: 1.2; font-family: Lato, ''Helvetica Neue'', Helvetica, sans-serif; font-weight: 900; margin: 1em 0px 0.5em; position: relative; width: inherit; caret-color: #333333; color: #333333; font-style: normal; font-variant-caps: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: pre-wrap; widows: auto; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration: none;" contenteditable="true" data-mce-style="box-sizing: border-box; font-size: 2.29rem; line-height: 1.2; font-family: Lato, ''Helvetica Neue'', Helvetica, sans-serif; font-weight: 900; margin: 1em 0px 0.5em; position: relative; width: inherit; caret-color: #333333; color: #333333; font-style: normal; font-variant-caps: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: pre-wrap; widows: auto; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; background-color: #ffffff; text-decoration: none;">依赖添加</h2><p cid="n59" mdtype="paragraph" class="" style="-webkit-margin-before: 1rem; -webkit-margin-after: 1rem; font-size: 1.25rem; line-height: 1.8; position: relative; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-family: Merriweather, &quot;PT Serif&quot;, Georgia, &quot;Times New Roman&quot;, STSong, serif; white-space: pre-wrap; text-size-adjust: auto;"><span class="md-line md-end-block" cid="n54" mdtype="line" style="display: block;"><span md-inline="plain" class="">Gradle：</span></span></p><pre class="md-fences md-end-block md-fences-with-lineno" lang="shell" contenteditable="false" cid="n48" mdtype="fences" style="overflow: visible; font-family: Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 1.125rem; break-inside: avoid; background-image: inherit; background-size: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(255, 255, 255); color: rgb(122, 122, 122); padding: 1.125em 1.125em 1.125em 0px; margin-bottom: 0.88em; border-color: rgb(122, 122, 122); line-height: 1.5rem; width: inherit; text-size-adjust: auto; position: relative !important;">  <span style="box-sizing: border-box;"></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;">compile(<span class="cm-string" style="box-sizing: border-box; color: rgb(170, 17, 17);">"org.springframework.boot:spring-boot-starter-data-mongodb:2.0.0.RELEASE"</span>)</span></pre><h2 cid="n77" mdtype="heading" contenteditable="true" class="md-end-block md-heading" style="box-sizing: border-box; font-size: 2.29rem; line-height: 1.2; font-family: Lato, &quot;Helvetica Neue&quot;, Helvetica, sans-serif; font-weight: 900; margin: 1em 0px 0.5em; position: relative; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-style: normal; font-variant-caps: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: pre-wrap; widows: auto; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration: none;"><span md-inline="plain" class="" style="box-sizing: border-box;">springboot配置</span></h2><pre class="md-fences md-end-block md-fences-with-lineno" lang="yaml" contenteditable="false" cid="n88" mdtype="fences" style="box-sizing: border-box; overflow: visible; font-family: Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 1.125rem; white-space: pre; text-align: left; break-inside: avoid; display: block; background-image: inherit; background-size: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(255, 255, 255); position: relative !important; color: rgb(122, 122, 122); padding: 1.125em 1.125em 1.125em 0px; margin-bottom: 0.88em; border: 1px solid rgb(122, 122, 122); line-height: 1.5rem; width: inherit; font-style: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-indent: 0px; text-transform: none; widows: auto; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; text-decoration: none; background-position: inherit inherit; background-repeat: inherit inherit;">  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-atom" style="box-sizing: border-box; color: rgb(34, 17, 153);">spring</span><span class="cm-meta" style="box-sizing: border-box; color: rgb(85, 85, 85);">:</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-atom" style="box-sizing: border-box; color: rgb(34, 17, 153);">  data</span><span class="cm-meta" style="box-sizing: border-box; color: rgb(85, 85, 85);">:</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-atom" style="box-sizing: border-box; color: rgb(34, 17, 153);"> &nbsp;  mongodb</span><span class="cm-meta" style="box-sizing: border-box; color: rgb(85, 85, 85);">:</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-atom" style="box-sizing: border-box; color: rgb(34, 17, 153);"> &nbsp; &nbsp;  uri</span><span class="cm-meta" style="box-sizing: border-box; color: rgb(85, 85, 85);">: </span>mongodb<span class="cm-meta" style="box-sizing: border-box; color: rgb(85, 85, 85);">:</span>//weBlog<span class="cm-meta" style="box-sizing: border-box; color: rgb(85, 85, 85);">:</span>123456@localhost<span class="cm-meta" style="box-sizing: border-box; color: rgb(85, 85, 85);">:</span>27017/weBlog</span></pre><h2 cid="n91" mdtype="heading" contenteditable="true" class="md-end-block md-heading" style="box-sizing: border-box; font-size: 2.29rem; line-height: 1.2; font-family: Lato, &quot;Helvetica Neue&quot;, Helvetica, sans-serif; font-weight: 900; margin: 1em 0px 0.5em; position: relative; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-style: normal; font-variant-caps: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: pre-wrap; widows: auto; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration: none;"><span md-inline="plain" style="box-sizing: border-box;">实体类</span></h2><pre class="md-fences md-end-block md-fences-with-lineno" lang="java" contenteditable="false" cid="n96" mdtype="fences" style="box-sizing: border-box; overflow: visible; font-family: Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 1.125rem; white-space: pre; text-align: left; break-inside: avoid; display: block; background-image: inherit; background-size: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(255, 255, 255); position: relative !important; color: rgb(122, 122, 122); padding: 1.125em 1.125em 1.125em 0px; margin-bottom: 0.88em; border: 1px solid rgb(122, 122, 122); line-height: 1.5rem; width: inherit; font-style: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-indent: 0px; text-transform: none; widows: auto; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; text-decoration: none; background-position: inherit inherit; background-repeat: inherit inherit;">  <span style="box-sizing: border-box;"></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-meta" style="box-sizing: border-box; color: rgb(85, 85, 85);">@Data</span> <span class="cm-comment" style="box-sizing: border-box; color: rgb(170, 85, 0);">// lombok注解，提供get/set方法</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-meta" style="box-sizing: border-box; color: rgb(85, 85, 85);">@NoArgsConstructor</span> <span class="cm-comment" style="box-sizing: border-box; color: rgb(170, 85, 0);">// lombok注解，提供无参构造函数</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-meta" style="box-sizing: border-box; color: rgb(85, 85, 85);">@Document</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">public</span> <span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">class</span> <span class="cm-def" style="box-sizing: border-box; color: rgb(0, 0, 255);">CandyBlog</span> {</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span cm-text="" style="box-sizing: border-box;">​</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-meta" style="box-sizing: border-box; color: rgb(85, 85, 85);">@Id</span> <span class="cm-comment" style="box-sizing: border-box; color: rgb(170, 85, 0);">// 表明mongodb主键</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">private</span> <span class="cm-variable-3" style="box-sizing: border-box; color: rgb(0, 136, 85);">long</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">id</span>;</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-comment" style="box-sizing: border-box; color: rgb(170, 85, 0);">// 作者名</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-meta" style="box-sizing: border-box; color: rgb(85, 85, 85);">@NotEmpty</span>(<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">message</span> <span class="cm-operator" style="box-sizing: border-box; color: rgb(152, 26, 26);">=</span> <span class="cm-string" style="box-sizing: border-box; color: rgb(170, 17, 17);">"作者不能为空"</span>)</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">private</span> <span class="cm-variable-3" style="box-sizing: border-box; color: rgb(0, 136, 85);">String</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">authorName</span>;</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-comment" style="box-sizing: border-box; color: rgb(170, 85, 0);">// 作者的微信id</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-meta" style="box-sizing: border-box; color: rgb(85, 85, 85);">@NotEmpty</span>(<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">message</span> <span class="cm-operator" style="box-sizing: border-box; color: rgb(152, 26, 26);">=</span> <span class="cm-string" style="box-sizing: border-box; color: rgb(170, 17, 17);">"微信id不能为空"</span>)</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">private</span> <span class="cm-variable-3" style="box-sizing: border-box; color: rgb(0, 136, 85);">String</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">openId</span>;</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-comment" style="box-sizing: border-box; color: rgb(170, 85, 0);">// 内容</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-meta" style="box-sizing: border-box; color: rgb(85, 85, 85);">@NotEmpty</span>(<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">message</span> <span class="cm-operator" style="box-sizing: border-box; color: rgb(152, 26, 26);">=</span> <span class="cm-string" style="box-sizing: border-box; color: rgb(170, 17, 17);">"内容不能为空"</span>)</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-meta" style="box-sizing: border-box; color: rgb(85, 85, 85);">@Length</span>(<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">max</span> <span class="cm-operator" style="box-sizing: border-box; color: rgb(152, 26, 26);">=</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">MAX_CANDY_BLOG_LENGTH</span>, <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">message</span> <span class="cm-operator" style="box-sizing: border-box; color: rgb(152, 26, 26);">=</span> <span class="cm-string" style="box-sizing: border-box; color: rgb(170, 17, 17);">"内容最多可以输入%d个字符"</span>)</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">private</span> <span class="cm-variable-3" style="box-sizing: border-box; color: rgb(0, 136, 85);">String</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">content</span>;</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-comment" style="box-sizing: border-box; color: rgb(170, 85, 0);">// 创建时的GMT unix时间戳</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">private</span> <span class="cm-variable-3" style="box-sizing: border-box; color: rgb(0, 136, 85);">Integer</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">created</span>;</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-comment" style="box-sizing: border-box; color: rgb(170, 85, 0);">// 修改时的GMT unix时间戳</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">private</span> <span class="cm-variable-3" style="box-sizing: border-box; color: rgb(0, 136, 85);">Integer</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">modified</span>;</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-comment" style="box-sizing: border-box; color: rgb(170, 85, 0);">// 点击次数</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">private</span> <span class="cm-variable-3" style="box-sizing: border-box; color: rgb(0, 136, 85);">Integer</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">hits</span>;</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span cm-text="" style="box-sizing: border-box;">​</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;">}</span></pre><h2 cid="n121" mdtype="heading" contenteditable="true" class="md-end-block md-heading" style="box-sizing: border-box; font-size: 2.29rem; line-height: 1.2; font-family: Lato, &quot;Helvetica Neue&quot;, Helvetica, sans-serif; font-weight: 900; margin: 1em 0px 0.5em; position: relative; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-style: normal; font-variant-caps: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: pre-wrap; widows: auto; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration: none;"><span md-inline="plain" style="box-sizing: border-box;">DAO层</span></h2><pre class="md-fences md-end-block md-fences-with-lineno" lang="java" contenteditable="false" cid="n123" mdtype="fences" style="box-sizing: border-box; overflow: visible; font-family: Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 1.125rem; white-space: pre; text-align: left; break-inside: avoid; display: block; background-image: inherit; background-size: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(255, 255, 255); position: relative !important; color: rgb(122, 122, 122); padding: 1.125em 1.125em 1.125em 0px; margin-bottom: 0.88em; border: 1px solid rgb(122, 122, 122); line-height: 1.5rem; width: inherit; font-style: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-indent: 0px; text-transform: none; widows: auto; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; text-decoration: none; background-position: inherit inherit; background-repeat: inherit inherit;">  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">public</span> <span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">interface</span> <span class="cm-def" style="box-sizing: border-box; color: rgb(0, 0, 255);">CandyBlogMapper</span> <span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">extends</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">MongoRepository</span><span class="cm-operator" style="box-sizing: border-box; color: rgb(152, 26, 26);">&lt;</span><span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">CandyBlog</span>, <span class="cm-variable-3" style="box-sizing: border-box; color: rgb(0, 136, 85);">Long</span><span class="cm-operator" style="box-sizing: border-box; color: rgb(152, 26, 26);">&gt;</span> {</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;">}</span></pre><p cid="n127" mdtype="paragraph" style="box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; -webkit-margin-start: 0px; -webkit-margin-end: 0px; font-size: 1.25rem; line-height: 1.8; font-weight: 300; position: relative; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-family: Merriweather, &quot;PT Serif&quot;, Georgia, &quot;Times New Roman&quot;, STSong, serif; font-style: normal; font-variant-caps: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: pre-wrap; widows: auto; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration: none;"><span class="md-line md-end-block" cid="n125" mdtype="line" contenteditable="true" style="box-sizing: border-box; display: block;"><span md-inline="strong" class="" style="box-sizing: border-box;"><strong style="box-sizing: border-box;"><span md-inline="plain" style="box-sizing: border-box;">注：DAO层只需要继承</span><span md-inline="code" spellcheck="false" style="box-sizing: border-box;"><code style="box-sizing: border-box; font-family: Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 1em; text-align: left; color: rgb(122, 122, 122);">MongoRepository</code></span><span md-inline="plain" style="box-sizing: border-box;">即可</span></strong></span></span></p><h2 cid="n144" mdtype="heading" contenteditable="true" class="md-end-block md-heading" style="box-sizing: border-box; font-size: 2.29rem; line-height: 1.2; font-family: Lato, &quot;Helvetica Neue&quot;, Helvetica, sans-serif; font-weight: 900; margin: 1em 0px 0.5em; position: relative; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-style: normal; font-variant-caps: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: pre-wrap; widows: auto; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration: none;"><span md-inline="plain" class="" style="box-sizing: border-box;">Service层</span></h2><pre class="md-fences md-end-block md-fences-with-lineno" lang="java" contenteditable="false" cid="n149" mdtype="fences" style="box-sizing: border-box; overflow: visible; font-family: Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 1.125rem; white-space: pre; text-align: left; break-inside: avoid; display: block; background-image: inherit; background-size: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(255, 255, 255); position: relative !important; color: rgb(122, 122, 122); padding: 1.125em 1.125em 1.125em 0px; margin-bottom: 0.88em; border: 1px solid rgb(122, 122, 122); line-height: 1.5rem; width: inherit; font-style: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-indent: 0px; text-transform: none; widows: auto; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; text-decoration: none; background-position: inherit inherit; background-repeat: inherit inherit;">  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-meta" style="box-sizing: border-box; color: rgb(85, 85, 85);">@Service</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">public</span> <span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">class</span> <span class="cm-def" style="box-sizing: border-box; color: rgb(0, 0, 255);">CandyBlogService</span> {</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-meta" style="box-sizing: border-box; color: rgb(85, 85, 85);">@Autowired</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">private</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">CandyBlogMapper</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">candyBlogMapper</span>;</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp;</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-tab" role="presentation" cm-text="	" style="box-sizing: border-box; font-family: var(--monospace); position: relative; display: inline-block;">    </span><span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">public</span> <span class="cm-variable-3" style="box-sizing: border-box; color: rgb(0, 136, 85);">Long</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">create</span>(<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">CandyBlog</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">candyBlog</span>) {</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment" style="box-sizing: border-box; color: rgb(170, 85, 0);">// 保存</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">candyBlogMapper</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">save</span>(<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">candyBlog</span>);</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment" style="box-sizing: border-box; color: rgb(170, 85, 0);">// 注意，获取id是直接使用保存的对象来获取，save返回的是保存数据的条数</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable-3" style="box-sizing: border-box; color: rgb(0, 136, 85);">Long</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">id</span> <span class="cm-operator" style="box-sizing: border-box; color: rgb(152, 26, 26);">=</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">candyBlog</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">getId</span>();</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">return</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">id</span>;</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp;  }</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;">}</span></pre><p cid="n154" mdtype="paragraph" class="md-focus-p" style="box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; -webkit-margin-start: 0px; -webkit-margin-end: 0px; font-size: 1.25rem; line-height: 1.8; font-weight: 300; position: relative; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-family: Merriweather, &quot;PT Serif&quot;, Georgia, &quot;Times New Roman&quot;, STSong, serif; font-style: normal; font-variant-caps: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: pre-wrap; widows: auto; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration: none;"></p><p>
            </p>
            ', 3, 'post', 'publish', 'markdown', 'springboot,mongodb', 'mongodb,springboot', 4, 0, 1, 1, 1);
INSERT INTO tale.t_contents (cid, title, slug, thumb_img, created, modified, content, author_id, type, status, fmt_type, tags, categories, hits, comments_num, allow_comment, allow_ping, allow_feed) VALUES (32, 'springboot学习笔记-环境搭建', null, null, 1524271889, 1524271889, '<p cid="n5" mdtype="paragraph" style="-webkit-margin-before: 1rem; -webkit-margin-after: 1rem; font-size: 1.25rem; line-height: 1.8; position: relative; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-family: Merriweather, &quot;PT Serif&quot;, Georgia, &quot;Times New Roman&quot;, STSong, serif; white-space: pre-wrap; text-size-adjust: auto;"><span class="md-line md-end-block" cid="n3" mdtype="line" style="display: block;"><span md-inline="plain">本文介绍springboot环境的初步搭建</span></span></p><p cid="n13" mdtype="paragraph" class="" style="-webkit-margin-before: 1rem; -webkit-margin-after: 1rem; font-size: 1.25rem; line-height: 1.8; position: relative; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-family: Merriweather, &quot;PT Serif&quot;, Georgia, &quot;Times New Roman&quot;, STSong, serif; white-space: pre-wrap; text-size-adjust: auto;"><span class="md-line md-end-block" cid="n8" mdtype="line" style="display: block;"><span md-inline="plain" class="">使用到的技术以及工具：</span></span></p><ul class="ul-list" cid="n28" mdtype="list" data-mark="*" style="font-size: 1.125rem; line-height: 1.5rem; position: relative; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-family: Merriweather, &quot;PT Serif&quot;, Georgia, &quot;Times New Roman&quot;, STSong, serif; white-space: pre-wrap; text-size-adjust: auto;"><li class="md-list-item" cid="n29" mdtype="list_item" style="margin: 0px; position: relative; font-size: 1.25rem; line-height: 1.8;"><p cid="n30" mdtype="paragraph" class="" style="-webkit-margin-before: 1rem; -webkit-margin-after: 1rem; font-size: 1.25rem; line-height: 1.8; margin-top: 0.5rem; margin-bottom: 0.5rem; position: relative; width: inherit;"><span class="md-line md-end-block" cid="n31" mdtype="line" style="display: block;"><span md-inline="plain" class="">依赖管理：gradle</span></span></p></li><li class="md-list-item" cid="n38" mdtype="list_item" style="margin: 0px; position: relative; font-size: 1.25rem; line-height: 1.8;"><p cid="n37" mdtype="paragraph" class="" style="-webkit-margin-before: 1rem; -webkit-margin-after: 1rem; font-size: 1.25rem; line-height: 1.8; margin-top: 0.5rem; margin-bottom: 0.5rem; position: relative; width: inherit;"><span class="md-line md-end-block" cid="n32" mdtype="line" style="display: block;"><span md-inline="plain" class="">框架：springboot</span></span></p></li><li class="md-list-item" cid="n129" mdtype="list_item" style="margin: 0px; position: relative; font-size: 1.25rem; line-height: 1.8;"><p cid="n128" mdtype="paragraph" style="-webkit-margin-before: 1rem; -webkit-margin-after: 1rem; font-size: 1.25rem; line-height: 1.8; margin-top: 0.5rem; margin-bottom: 0.5rem; position: relative; width: inherit;"><span class="md-line md-end-block" cid="n123" mdtype="line" style="display: block;"><span md-inline="plain">IDE：idea</span></span></p></li><li class="md-list-item" cid="n136" mdtype="list_item" style="margin: 0px; position: relative; font-size: 1.25rem; line-height: 1.8;"><p cid="n135" mdtype="paragraph" class="" style="-webkit-margin-before: 1rem; -webkit-margin-after: 1rem; font-size: 1.25rem; line-height: 1.8; margin-top: 0.5rem; margin-bottom: 0.5rem; position: relative; width: inherit;"><span class="md-line md-end-block" cid="n130" mdtype="line" style="display: block;"><span md-inline="plain" class="">请求模拟：postman</span></span></p></li></ul><h2 cid="n45" mdtype="heading" class="md-end-block md-heading" style="font-size: 2.29rem; line-height: 1.2; font-family: Lato, &quot;Helvetica Neue&quot;, Helvetica, sans-serif; font-weight: 900; margin-top: 1em; margin-bottom: 0.5em; position: relative; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); white-space: pre-wrap; text-size-adjust: auto;"><span md-inline="plain" class="">gradle配置：build.gradle</span></h2><pre class="md-fences md-end-block md-fences-with-lineno" lang="shell" contenteditable="false" cid="n48" mdtype="fences" style="overflow: visible; font-family: Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 1.125rem; break-inside: avoid; background-image: inherit; background-size: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(255, 255, 255); color: rgb(122, 122, 122); padding: 1.125em 1.125em 1.125em 0px; margin-bottom: 0.88em; border-color: rgb(122, 122, 122); line-height: 1.5rem; width: inherit; text-size-adjust: auto; position: relative !important;">  <span role="presentation" style="padding-right: 0.1px;">group <span class="cm-string" style="color: rgb(170, 17, 17);">''com.otakus''</span></span><br>  <span role="presentation" style="padding-right: 0.1px;">version <span class="cm-string" style="color: rgb(170, 17, 17);">''1.0-SNAPSHOT''</span></span><br>  <span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span><br>  <span role="presentation" style="padding-right: 0.1px;">apply plugin: <span class="cm-string" style="color: rgb(170, 17, 17);">''java''</span></span><br>  <span role="presentation" style="padding-right: 0.1px;">apply plugin: <span class="cm-string" style="color: rgb(170, 17, 17);">''war''</span></span><br>  <span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span><br>  <span role="presentation" style="padding-right: 0.1px;">sourceCompatibility <span class="cm-operator" style="color: rgb(152, 26, 26);">=</span> <span class="cm-number" style="color: rgb(17, 102, 68);">1</span>.8</span><br>  <span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span><br>  <span role="presentation" style="padding-right: 0.1px;">repositories {</span><br>  <span role="presentation" style="padding-right: 0.1px;"> &nbsp;  mavenCentral()</span><br>  <span role="presentation" style="padding-right: 0.1px;">}</span><br>  <span role="presentation" style="padding-right: 0.1px;">// 定义自定义变量必须在ext中</span><br>  <span role="presentation" style="padding-right: 0.1px;">ext {</span><br>  <span role="presentation" style="padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-def" style="color: rgb(0, 0, 255);">springVersion</span><span class="cm-operator" style="color: rgb(152, 26, 26);">=</span><span class="cm-string" style="color: rgb(170, 17, 17);">"2.0.0.RELEASE"</span></span><br>  <span role="presentation" style="padding-right: 0.1px;">}</span><br>  <span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span><br>  <span role="presentation" style="padding-right: 0.1px;">dependencies {</span><br>  <span role="presentation" style="padding-right: 0.1px;"><span class="cm-tab" role="presentation" cm-text="	" style="font-family: var(--monospace); position: relative; display: inline-block;">    </span>//添加spring web依赖</span><br>  <span role="presentation" style="padding-right: 0.1px;"> &nbsp;  compile(<span class="cm-string" style="color: rgb(170, 17, 17);">"org.springframework.boot:spring-boot-starter-web:</span><span class="cm-def" style="color: rgb(0, 0, 255);">${springVersion}</span><span class="cm-string" style="color: rgb(170, 17, 17);">"</span>)</span><br>  <span role="presentation" style="padding-right: 0.1px;"> &nbsp;  testCompile group: <span class="cm-string" style="color: rgb(170, 17, 17);">''junit''</span>, name: <span class="cm-string" style="color: rgb(170, 17, 17);">''junit''</span>, version: <span class="cm-string" style="color: rgb(170, 17, 17);">''4.11''</span></span><br>  <span role="presentation" style="padding-right: 0.1px;"> &nbsp;  testCompile group: <span class="cm-string" style="color: rgb(170, 17, 17);">''junit''</span>, name: <span class="cm-string" style="color: rgb(170, 17, 17);">''junit''</span>, version: <span class="cm-string" style="color: rgb(170, 17, 17);">''4.12''</span></span><br>  <span role="presentation" style="padding-right: 0.1px;">}</span><br>  <span role="presentation" style="padding-right: 0.1px;"><span cm-text="">​</span></span></pre><p cid="n53" mdtype="paragraph" style="-webkit-margin-before: 1rem; -webkit-margin-after: 1rem; font-size: 1.25rem; line-height: 1.8; position: relative; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-family: Merriweather, &quot;PT Serif&quot;, Georgia, &quot;Times New Roman&quot;, STSong, serif; white-space: pre-wrap; text-size-adjust: auto;"><span class="md-line md-end-block" cid="n51" mdtype="line" style="display: block;"></span></p><h2 cid="n61" mdtype="heading" class="md-end-block md-heading" style="font-size: 2.29rem; line-height: 1.2; font-family: Lato, &quot;Helvetica Neue&quot;, Helvetica, sans-serif; font-weight: 900; margin-top: 1em; margin-bottom: 0.5em; position: relative; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); white-space: pre-wrap; text-size-adjust: auto;"><span md-inline="plain" class="">程序入口</span></h2><pre class="md-fences md-end-block md-fences-with-lineno" lang="java" contenteditable="false" cid="n63" mdtype="fences" style="overflow: visible; font-family: Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 1.125rem; break-inside: avoid; background-image: inherit; background-size: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(255, 255, 255); color: rgb(122, 122, 122); padding: 1.125em 1.125em 1.125em 0px; margin-bottom: 0.88em; border-color: rgb(122, 122, 122); line-height: 1.5rem; width: inherit; text-size-adjust: auto; position: relative !important;">  <span style="box-sizing: border-box;"></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">package</span> <span class="cm-def" style="box-sizing: border-box; color: rgb(0, 0, 255);">com</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">otakus</span>;</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span cm-text="" style="box-sizing: border-box;">​</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">import</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">org</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">springframework</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">boot</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">SpringApplication</span>;</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">import</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">org</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">springframework</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">boot</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">autoconfigure</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">SpringBootApplication</span>;</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span cm-text="" style="box-sizing: border-box;">​</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-comment" style="box-sizing: border-box; color: rgb(170, 85, 0);">// SpringBootApplication其实是一个组合注解，包含了一些基础的设置，之后再做详细的介绍</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-meta" style="box-sizing: border-box; color: rgb(85, 85, 85);">@SpringBootApplication</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">public</span> <span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">class</span> <span class="cm-def" style="box-sizing: border-box; color: rgb(0, 0, 255);">Application</span> {</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span cm-text="" style="box-sizing: border-box;">​</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">public</span> <span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">static</span> <span class="cm-variable-3" style="box-sizing: border-box; color: rgb(0, 136, 85);">void</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">main</span>(<span class="cm-variable-3" style="box-sizing: border-box; color: rgb(0, 136, 85);">String</span>[] <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">args</span>) {</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">SpringApplication</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">run</span>(<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">Application</span>.<span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">class</span>, <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">args</span>);</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp;  }</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;">}</span></pre><p cid="n67" mdtype="paragraph" style="box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; -webkit-margin-start: 0px; -webkit-margin-end: 0px; font-size: 1.25rem; line-height: 1.8; font-weight: 300; position: relative; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-family: Merriweather, &quot;PT Serif&quot;, Georgia, &quot;Times New Roman&quot;, STSong, serif; font-style: normal; font-variant-caps: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: pre-wrap; widows: auto; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration: none;"><span class="md-line md-end-block" cid="n65" mdtype="line" contenteditable="true" style="box-sizing: border-box; display: block;"></span></p><h2 cid="n75" mdtype="heading" contenteditable="true" class="md-end-block md-heading" style="box-sizing: border-box; font-size: 2.29rem; line-height: 1.2; font-family: Lato, &quot;Helvetica Neue&quot;, Helvetica, sans-serif; font-weight: 900; margin: 1em 0px 0.5em; position: relative; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-style: normal; font-variant-caps: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: pre-wrap; widows: auto; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration: none;"><span md-inline="plain" style="box-sizing: border-box;">控制层</span></h2><p cid="n77" mdtype="paragraph" style="box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; -webkit-margin-start: 0px; -webkit-margin-end: 0px; font-size: 1.25rem; line-height: 1.8; font-weight: 300; position: relative; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-family: Merriweather, &quot;PT Serif&quot;, Georgia, &quot;Times New Roman&quot;, STSong, serif; font-style: normal; font-variant-caps: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: pre-wrap; widows: auto; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration: none;"><span class="md-line md-end-block" cid="n78" mdtype="line" contenteditable="true" style="box-sizing: border-box; display: block;"><span md-inline="plain" style="box-sizing: border-box;">演示：</span></span></p><pre class="md-fences md-end-block md-fences-with-lineno" lang="java" contenteditable="false" cid="n84" mdtype="fences" style="box-sizing: border-box; overflow: visible; font-family: Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 1.125rem; white-space: pre; text-align: left; break-inside: avoid; display: block; background-image: inherit; background-size: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(255, 255, 255); position: relative !important; color: rgb(122, 122, 122); padding: 1.125em 1.125em 1.125em 0px; margin-bottom: 0.88em; border: 1px solid rgb(122, 122, 122); line-height: 1.5rem; width: inherit; font-style: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-indent: 0px; text-transform: none; widows: auto; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; text-decoration: none; background-position: inherit inherit; background-repeat: inherit inherit;">  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">package</span> <span class="cm-def" style="box-sizing: border-box; color: rgb(0, 0, 255);">com</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">otakus</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">controller</span>;</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span cm-text="" style="box-sizing: border-box;">​</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">import</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">org</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">springframework</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">stereotype</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">Controller</span>;</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">import</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">org</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">springframework</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">web</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">bind</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">annotation</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">RequestMapping</span>;</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">import</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">org</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">springframework</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">web</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">bind</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">annotation</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">ResponseBody</span>;</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span cm-text="" style="box-sizing: border-box;">​</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-comment" style="box-sizing: border-box; color: rgb(170, 85, 0);">// 表明是控制层，也是组合注解，包含了@Component，表明是spring的组件</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-meta" style="box-sizing: border-box; color: rgb(85, 85, 85);">@Controller</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">public</span> <span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">class</span> <span class="cm-def" style="box-sizing: border-box; color: rgb(0, 0, 255);">DemoController</span> {</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span cm-text="" style="box-sizing: border-box;">​</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-comment" style="box-sizing: border-box; color: rgb(170, 85, 0);">// 表明返回的是文本类型，而非模板路径</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-meta" style="box-sizing: border-box; color: rgb(85, 85, 85);">@ResponseBody</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-comment" style="box-sizing: border-box; color: rgb(170, 85, 0);">// 请求的路径</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-meta" style="box-sizing: border-box; color: rgb(85, 85, 85);">@RequestMapping</span>(<span class="cm-string" style="box-sizing: border-box; color: rgb(170, 17, 17);">"/hello"</span>)</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">public</span> <span class="cm-variable-3" style="box-sizing: border-box; color: rgb(0, 136, 85);">String</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">hello</span>() {</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">return</span> <span class="cm-string" style="box-sizing: border-box; color: rgb(170, 17, 17);">"hello"</span>;</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp;  }</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;">}</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span cm-text="" style="box-sizing: border-box;">​</span></span></pre><p cid="n87" mdtype="paragraph" style="box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; -webkit-margin-start: 0px; -webkit-margin-end: 0px; font-size: 1.25rem; line-height: 1.8; font-weight: 300; position: relative; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-family: Merriweather, &quot;PT Serif&quot;, Georgia, &quot;Times New Roman&quot;, STSong, serif; font-style: normal; font-variant-caps: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: pre-wrap; widows: auto; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration: none;"><span class="md-line md-end-block" cid="n85" mdtype="line" contenteditable="true" style="box-sizing: border-box; display: block;"></span></p><h2 cid="n95" mdtype="heading" contenteditable="true" class="md-end-block md-heading" style="box-sizing: border-box; font-size: 2.29rem; line-height: 1.2; font-family: Lato, &quot;Helvetica Neue&quot;, Helvetica, sans-serif; font-weight: 900; margin: 1em 0px 0.5em; position: relative; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-style: normal; font-variant-caps: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: pre-wrap; widows: auto; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration: none;"><span md-inline="plain" class="" style="box-sizing: border-box;">springboot配置</span></h2><p cid="n98" mdtype="paragraph" style="box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; -webkit-margin-start: 0px; -webkit-margin-end: 0px; font-size: 1.25rem; line-height: 1.8; font-weight: 300; position: relative; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-family: Merriweather, &quot;PT Serif&quot;, Georgia, &quot;Times New Roman&quot;, STSong, serif; font-style: normal; font-variant-caps: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: pre-wrap; widows: auto; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration: none;"><span class="md-line md-end-block" cid="n96" mdtype="line" contenteditable="true" style="box-sizing: border-box; display: block;"><span md-inline="plain" style="box-sizing: border-box;">application.yml：</span></span></p><pre class="md-fences md-end-block md-fences-with-lineno" lang="yaml" contenteditable="false" cid="n106" mdtype="fences" style="box-sizing: border-box; overflow: visible; font-family: Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 1.125rem; white-space: pre; text-align: left; break-inside: avoid; display: block; background-image: inherit; background-size: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(255, 255, 255); position: relative !important; color: rgb(122, 122, 122); padding: 1.125em 1.125em 1.125em 0px; margin-bottom: 0.88em; border: 1px solid rgb(122, 122, 122); line-height: 1.5rem; width: inherit; font-style: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-indent: 0px; text-transform: none; widows: auto; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; text-decoration: none; background-position: inherit inherit; background-repeat: inherit inherit;">  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-atom" style="box-sizing: border-box; color: rgb(34, 17, 153);">server</span><span class="cm-meta" style="box-sizing: border-box; color: rgb(85, 85, 85);">:</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;">  // 服务占用端口号</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-atom" style="box-sizing: border-box; color: rgb(34, 17, 153);">  port</span><span class="cm-meta" style="box-sizing: border-box; color: rgb(85, 85, 85);">: </span><span class="cm-number" style="box-sizing: border-box; color: rgb(17, 102, 68);">9000 </span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-atom" style="box-sizing: border-box; color: rgb(34, 17, 153);">  servlet</span><span class="cm-meta" style="box-sizing: border-box; color: rgb(85, 85, 85);">:</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;">  <span class="cm-tab" role="presentation" cm-text="	" style="box-sizing: border-box; font-family: var(--monospace); position: relative; display: inline-block;">  </span>// 表明请求服务的路径</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-atom" style="box-sizing: border-box; color: rgb(34, 17, 153);"> &nbsp;  context-path</span><span class="cm-meta" style="box-sizing: border-box; color: rgb(85, 85, 85);">: </span>/ &nbsp;</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp;  // 如上配置则请求服务的路径为 localhost:9000/</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp;  // 假设context-path参数为demo，其余条件不变</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp;  // 则请求路径为 localhost:9000/demo</span></pre><p cid="n109" mdtype="paragraph" style="box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; -webkit-margin-start: 0px; -webkit-margin-end: 0px; font-size: 1.25rem; line-height: 1.8; font-weight: 300; position: relative; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-family: Merriweather, &quot;PT Serif&quot;, Georgia, &quot;Times New Roman&quot;, STSong, serif; font-style: normal; font-variant-caps: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: pre-wrap; widows: auto; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration: none;"><span class="md-line md-end-block" cid="n107" mdtype="line" contenteditable="true" style="box-sizing: border-box; display: block;"></span></p><h2 cid="n117" mdtype="heading" contenteditable="true" class="md-end-block md-heading" style="box-sizing: border-box; font-size: 2.29rem; line-height: 1.2; font-family: Lato, &quot;Helvetica Neue&quot;, Helvetica, sans-serif; font-weight: 900; margin: 1em 0px 0.5em; position: relative; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-style: normal; font-variant-caps: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: pre-wrap; widows: auto; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration: none;"><span md-inline="plain" style="box-sizing: border-box;">请求测试</span></h2><p cid="n120" mdtype="paragraph" class="" style="box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; -webkit-margin-start: 0px; -webkit-margin-end: 0px; font-size: 1.25rem; line-height: 1.8; font-weight: 300; position: relative; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-family: Merriweather, &quot;PT Serif&quot;, Georgia, &quot;Times New Roman&quot;, STSong, serif; font-style: normal; font-variant-caps: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: pre-wrap; widows: auto; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration: none;"><span class="md-line md-end-block" cid="n118" mdtype="line" contenteditable="true" style="box-sizing: border-box; display: block;"><span md-inline="plain" class="" style="box-sizing: border-box;">通过postman进行请求测试：</span></span></p><p cid="n142" mdtype="paragraph" class="" style="box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; -webkit-margin-start: 0px; -webkit-margin-end: 0px; font-size: 1.25rem; line-height: 1.8; font-weight: 300; position: relative; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-family: Merriweather, &quot;PT Serif&quot;, Georgia, &quot;Times New Roman&quot;, STSong, serif; font-style: normal; font-variant-caps: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: pre-wrap; widows: auto; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration: none;"><span class="md-line md-end-block" cid="n156" mdtype="line" contenteditable="true" style="box-sizing: border-box; display: block;"></span></p><h3 cid="n154" mdtype="heading" contenteditable="true" class="md-end-block md-heading" style="box-sizing: border-box; font-size: 1.9rem; line-height: 1.2; font-family: Lato, &quot;Helvetica Neue&quot;, Helvetica, sans-serif; font-weight: 900; margin: 1em 0px 0.5em; position: relative; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-style: normal; font-variant-caps: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: pre-wrap; widows: auto; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration: none;"><span md-inline="plain" style="box-sizing: border-box;">url：</span></h3><p cid="n151" mdtype="paragraph" style="box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; -webkit-margin-start: 0px; -webkit-margin-end: 0px; font-size: 1.25rem; line-height: 1.8; font-weight: 300; position: relative; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-family: Merriweather, &quot;PT Serif&quot;, Georgia, &quot;Times New Roman&quot;, STSong, serif; font-style: normal; font-variant-caps: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: pre-wrap; widows: auto; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration: none;"><span class="md-line md-end-block" cid="n149" mdtype="line" contenteditable="true" style="box-sizing: border-box; display: block;"><span md-inline="image" data-src="/var/folders/f6/l_73s9151h534lcxfwmv9t_00000gn/T/abnerworks.Typora/image-20180420223738390.png" contenteditable="false" class="md-image md-img-loaded" style="box-sizing: border-box; word-break: break-all; min-width: 10px; min-height: 10px; position: relative; font-family: monospace; display: inline-block; width: 854px; text-align: center;"><img src="file:///var/folders/f6/l_73s9151h534lcxfwmv9t_00000gn/T/abnerworks.Typora/image-20180420223738390.png?lastModify=1524271759" data-local-refresh="true" style="box-sizing: border-box; border-width: 0px 4px 0px 2px; border-right-style: solid; border-left-style: solid; border-right-color: transparent; border-left-color: transparent; vertical-align: middle; max-width: 100%; cursor: default; width: auto;"></span></span></p><h3 cid="n163" mdtype="heading" contenteditable="true" class="md-end-block md-heading" style="box-sizing: border-box; font-size: 1.9rem; line-height: 1.2; font-family: Lato, &quot;Helvetica Neue&quot;, Helvetica, sans-serif; font-weight: 900; margin: 1em 0px 0.5em; position: relative; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-style: normal; font-variant-caps: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: pre-wrap; widows: auto; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration: none;"><span md-inline="plain" style="box-sizing: border-box;">响应结果</span></h3><p cid="n166" mdtype="paragraph" style="box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; -webkit-margin-start: 0px; -webkit-margin-end: 0px; font-size: 1.25rem; line-height: 1.8; font-weight: 300; position: relative; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-family: Merriweather, &quot;PT Serif&quot;, Georgia, &quot;Times New Roman&quot;, STSong, serif; font-style: normal; font-variant-caps: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: pre-wrap; widows: auto; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration: none;"><span class="md-line md-end-block" cid="n164" mdtype="line" contenteditable="true" style="box-sizing: border-box; display: block;"><span md-inline="image" data-src="/var/folders/f6/l_73s9151h534lcxfwmv9t_00000gn/T/abnerworks.Typora/image-20180420223826842.png" contenteditable="false" class="md-image md-img-loaded" style="box-sizing: border-box; word-break: break-all; min-width: 10px; min-height: 10px; position: relative; font-family: monospace; display: inline-block; width: 854px; text-align: center;"><img src="file:///var/folders/f6/l_73s9151h534lcxfwmv9t_00000gn/T/abnerworks.Typora/image-20180420223826842.png?lastModify=1524271759" data-local-refresh="true" style="box-sizing: border-box; border-width: 0px 4px 0px 2px; border-right-style: solid; border-left-style: solid; border-right-color: transparent; border-left-color: transparent; vertical-align: middle; max-width: 100%; cursor: default; width: auto;"></span></span></p><p cid="n174" mdtype="paragraph" class="" style="box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; -webkit-margin-start: 0px; -webkit-margin-end: 0px; font-size: 1.25rem; line-height: 1.8; font-weight: 300; position: relative; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-family: Merriweather, &quot;PT Serif&quot;, Georgia, &quot;Times New Roman&quot;, STSong, serif; font-style: normal; font-variant-caps: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: pre-wrap; widows: auto; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration: none;"><span class="md-line md-end-block" cid="n169" mdtype="line" contenteditable="true" style="box-sizing: border-box; display: block;"></span></p><p cid="n148" mdtype="paragraph" class="md-focus-p" style="box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; -webkit-margin-start: 0px; -webkit-margin-end: 0px; font-size: 1.25rem; line-height: 1.8; font-weight: 300; position: relative; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-family: Merriweather, &quot;PT Serif&quot;, Georgia, &quot;Times New Roman&quot;, STSong, serif; font-style: normal; font-variant-caps: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: pre-wrap; widows: auto; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration: none;"></p><p>
            </p>', 3, 'post', 'publish', 'markdown', 'springboot', 'springboot', 0, 0, 1, 1, 1);
INSERT INTO tale.t_contents (cid, title, slug, thumb_img, created, modified, content, author_id, type, status, fmt_type, tags, categories, hits, comments_num, allow_comment, allow_ping, allow_feed) VALUES (33, 'springboot学习笔记-拦截器', 'spring-boot-interceptor', null, 1524291910, 1524291910, '<blockquote cid="n5" mdtype="blockquote" style="margin-top: 1rem; margin-bottom: 1rem; padding: 1.33em; font-style: italic; border-left-color: rgb(122, 122, 122); color: rgb(85, 85, 85); font-family: Merriweather, &quot;PT Serif&quot;, Georgia, &quot;Times New Roman&quot;, STSong, serif; font-size: 21px; white-space: pre-wrap; text-size-adjust: auto;"><p cid="n8" mdtype="paragraph" class="" style="-webkit-margin-before: 1rem; -webkit-margin-after: 1rem; font-size: 1.25rem; line-height: 1.8; position: relative; width: inherit;"><span class="md-line md-end-block" cid="n9" mdtype="line" style="display: block;"><span md-inline="plain" class="">本文主要参考自《Java EE开发的颠覆者 Spring Boot 实战》汪云飞著</span></span></p></blockquote><h2 cid="n21" mdtype="heading" class="md-end-block md-heading" style="font-size: 2.29rem; line-height: 1.2; font-family: Lato, &quot;Helvetica Neue&quot;, Helvetica, sans-serif; font-weight: 900; margin-top: 1em; margin-bottom: 0.5em; position: relative; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); white-space: pre-wrap; text-size-adjust: auto;"><span md-inline="plain" class=""> 拦截器</span></h2><blockquote cid="n25" mdtype="blockquote" style="margin-top: 1rem; margin-bottom: 1rem; padding: 1.33em; font-style: italic; border-left-color: rgb(122, 122, 122); color: rgb(85, 85, 85); font-family: Merriweather, &quot;PT Serif&quot;, Georgia, &quot;Times New Roman&quot;, STSong, serif; font-size: 21px; white-space: pre-wrap; text-size-adjust: auto;"><p cid="n27" mdtype="paragraph" class="" style="-webkit-margin-before: 1rem; -webkit-margin-after: 1rem; font-size: 1.25rem; line-height: 1.8; position: relative; width: inherit;"><span class="md-line md-end-block" cid="n28" mdtype="line" style="display: block;"><span md-inline="plain" class="">拦截器实现对每一个请求处理前后进行相关的业务处理，类似于Servlet的Filter。</span></span></p></blockquote><h3 cid="n51" mdtype="heading" class="md-end-block md-heading" style="font-size: 1.9rem; line-height: 1.2; font-family: Lato, &quot;Helvetica Neue&quot;, Helvetica, sans-serif; font-weight: 900; margin-top: 1em; margin-bottom: 0.5em; position: relative; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); white-space: pre-wrap; text-size-adjust: auto;"><span md-inline="plain" class="">代码</span></h3><pre class="md-fences md-end-block md-fences-with-lineno" lang="java" contenteditable="false" cid="n34" mdtype="fences" style="overflow: visible; font-family: Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 1.125rem; break-inside: avoid; background-image: inherit; background-size: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(255, 255, 255); color: rgb(122, 122, 122); padding: 1.125em 1.125em 1.125em 0px; margin-bottom: 0.88em; border-color: rgb(122, 122, 122); line-height: 1.5rem; width: inherit; text-size-adjust: auto; position: relative !important;">  <span style="box-sizing: border-box;"></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">package</span> <span class="cm-def" style="box-sizing: border-box; color: rgb(0, 0, 255);">com</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">otakus</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">interceptor</span>;</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span cm-text="" style="box-sizing: border-box;">​</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">import</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">org</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">springframework</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">web</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">servlet</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">HandlerInterceptor</span>;</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">import</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">org</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">springframework</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">web</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">servlet</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">ModelAndView</span>;</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">import</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">org</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">springframework</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">web</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">servlet</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">handler</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">HandlerInterceptorAdapter</span>;</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span cm-text="" style="box-sizing: border-box;">​</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">import</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">javax</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">servlet</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">http</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">HttpServletRequest</span>;</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">import</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">javax</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">servlet</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">http</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">HttpServletResponse</span>;</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span cm-text="" style="box-sizing: border-box;">​</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-comment" style="box-sizing: border-box; color: rgb(170, 85, 0);">/**</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> <span class="cm-comment" style="box-sizing: border-box; color: rgb(170, 85, 0);">* JDK8以前是通过继承HandlerInterceptorAdapter，</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> <span class="cm-comment" style="box-sizing: border-box; color: rgb(170, 85, 0);">* 重写其中的方法来实现拦截器的</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> <span class="cm-comment" style="box-sizing: border-box; color: rgb(170, 85, 0);">* JDK8特性，接口可以声明默认方法(default)以及静态方法</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> <span class="cm-comment" style="box-sizing: border-box; color: rgb(170, 85, 0);">* 默认方法不需要接口实现类实现，并且接口实现类自动继承</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> <span class="cm-comment" style="box-sizing: border-box; color: rgb(170, 85, 0);">* 因而 spring 废弃了大部分的抽象类（虽然本例中没有 spring-web-mvc 5.0.4 版本）</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> <span class="cm-comment" style="box-sizing: border-box; color: rgb(170, 85, 0);">* 所以spring boot相关的文章中的代码都是直接实现原接口</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> <span class="cm-comment" style="box-sizing: border-box; color: rgb(170, 85, 0);">*/</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">public</span> <span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">class</span> <span class="cm-def" style="box-sizing: border-box; color: rgb(0, 0, 255);">DemoInterceptor</span> <span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">implements</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">HandlerInterceptor</span> {</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span cm-text="" style="box-sizing: border-box;">​</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-meta" style="box-sizing: border-box; color: rgb(85, 85, 85);">@Override</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">public</span> <span class="cm-variable-3" style="box-sizing: border-box; color: rgb(0, 136, 85);">boolean</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">preHandle</span>(<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">HttpServletRequest</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">request</span>, <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">HttpServletResponse</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">response</span>, <span class="cm-variable-3" style="box-sizing: border-box; color: rgb(0, 136, 85);">Object</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">handler</span>) <span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">throws</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">Exception</span> {</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment" style="box-sizing: border-box; color: rgb(170, 85, 0);">//在请求到控制层前执行</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">System</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">out</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">println</span>(<span class="cm-string" style="box-sizing: border-box; color: rgb(170, 17, 17);">"控制层处理请求前执行的代码块&gt;&gt;&gt;&gt;&gt;&gt;&gt;"</span>);</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">return</span> <span class="cm-atom" style="box-sizing: border-box; color: rgb(34, 17, 153);">true</span>;</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp;  }</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span cm-text="" style="box-sizing: border-box;">​</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-meta" style="box-sizing: border-box; color: rgb(85, 85, 85);">@Override</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">public</span> <span class="cm-variable-3" style="box-sizing: border-box; color: rgb(0, 136, 85);">void</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">postHandle</span>(<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">HttpServletRequest</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">request</span>, <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">HttpServletResponse</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">response</span>, <span class="cm-variable-3" style="box-sizing: border-box; color: rgb(0, 136, 85);">Object</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">handler</span>, <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">ModelAndView</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">modelAndView</span>) <span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">throws</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">Exception</span> {</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment" style="box-sizing: border-box; color: rgb(170, 85, 0);">//在控制层之后执行</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">System</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">out</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">println</span>(<span class="cm-string" style="box-sizing: border-box; color: rgb(170, 17, 17);">"控制层处理请求后执行的代码块&gt;&gt;&gt;&gt;&gt;&gt;&gt;"</span>);</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp;  }</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span cm-text="" style="box-sizing: border-box;">​</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-meta" style="box-sizing: border-box; color: rgb(85, 85, 85);">@Override</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">public</span> <span class="cm-variable-3" style="box-sizing: border-box; color: rgb(0, 136, 85);">void</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">afterCompletion</span>(<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">HttpServletRequest</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">request</span>, <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">HttpServletResponse</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">response</span>, <span class="cm-variable-3" style="box-sizing: border-box; color: rgb(0, 136, 85);">Object</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">handler</span>, <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">Exception</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">ex</span>) <span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">throws</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">Exception</span> {</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment" style="box-sizing: border-box; color: rgb(170, 85, 0);">//请求发送完成之后执行</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">System</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">out</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">println</span>(<span class="cm-string" style="box-sizing: border-box; color: rgb(170, 17, 17);">"请求完成后执行的代码块&gt;&gt;&gt;&gt;&gt;&gt;&gt;"</span>);</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp;  }</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;">}</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span cm-text="" style="box-sizing: border-box;">​</span></span></pre><h2 cid="n37" mdtype="heading" contenteditable="true" class="md-end-block md-heading" style="box-sizing: border-box; font-size: 2.29rem; line-height: 1.2; font-family: Lato, &quot;Helvetica Neue&quot;, Helvetica, sans-serif; font-weight: 900; margin: 1em 0px 0.5em; position: relative; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-style: normal; font-variant-caps: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: pre-wrap; widows: auto; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration: none;"><span md-inline="plain" style="box-sizing: border-box;">配置拦截器</span></h2><pre class="md-fences md-end-block md-fences-with-lineno" lang="java" contenteditable="false" cid="n72" mdtype="fences" style="box-sizing: border-box; overflow: visible; font-family: Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 1.125rem; white-space: pre; text-align: left; break-inside: avoid; display: block; background-image: inherit; background-size: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(255, 255, 255); position: relative !important; color: rgb(122, 122, 122); padding: 1.125em 1.125em 1.125em 0px; margin-bottom: 0.88em; border: 1px solid rgb(122, 122, 122); line-height: 1.5rem; width: inherit; font-style: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-indent: 0px; text-transform: none; widows: auto; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; text-decoration: none; background-position: inherit inherit; background-repeat: inherit inherit;">  <span style="box-sizing: border-box;"></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">package</span> <span class="cm-def" style="box-sizing: border-box; color: rgb(0, 0, 255);">com</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">otakus</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">config</span>;</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span cm-text="" style="box-sizing: border-box;">​</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">import</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">com</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">otakus</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">interceptor</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">DemoInterceptor</span>;</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">import</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">org</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">springframework</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">context</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">annotation</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">Bean</span>;</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">import</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">org</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">springframework</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">context</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">annotation</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">Configuration</span>;</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">import</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">org</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">springframework</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">web</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">servlet</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">config</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">annotation</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">InterceptorRegistry</span>;</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">import</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">org</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">springframework</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">web</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">servlet</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">config</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">annotation</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">WebMvcConfigurer</span>;</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span cm-text="" style="box-sizing: border-box;">​</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-meta" style="box-sizing: border-box; color: rgb(85, 85, 85);">@Configuration</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">public</span> <span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">class</span> <span class="cm-def" style="box-sizing: border-box; color: rgb(0, 0, 255);">MvcConfig</span> <span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">implements</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">WebMvcConfigurer</span> {</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span cm-text="" style="box-sizing: border-box;">​</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-meta" style="box-sizing: border-box; color: rgb(85, 85, 85);">@Bean</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">public</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">DemoInterceptor</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">demoInterceptor</span>() {</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">return</span> <span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">new</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">DemoInterceptor</span>();</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp;  }</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span cm-text="" style="box-sizing: border-box;">​</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-comment" style="box-sizing: border-box; color: rgb(170, 85, 0);">//将创建的拦截器添加到MVC框架中</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-meta" style="box-sizing: border-box; color: rgb(85, 85, 85);">@Override</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">public</span> <span class="cm-variable-3" style="box-sizing: border-box; color: rgb(0, 136, 85);">void</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">addInterceptors</span>(<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">InterceptorRegistry</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">registry</span>) {</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-comment" style="box-sizing: border-box; color: rgb(170, 85, 0);">//拦截器配置</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">registry</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">addInterceptor</span>(<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">demoInterceptor</span>());</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp;  }</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;">}</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span cm-text="" style="box-sizing: border-box;">​</span></span></pre><p cid="n76" mdtype="paragraph" style="box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; -webkit-margin-start: 0px; -webkit-margin-end: 0px; font-size: 1.25rem; line-height: 1.8; font-weight: 300; position: relative; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-family: Merriweather, &quot;PT Serif&quot;, Georgia, &quot;Times New Roman&quot;, STSong, serif; font-style: normal; font-variant-caps: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: pre-wrap; widows: auto; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration: none;"><span class="md-line md-end-block" cid="n74" mdtype="line" contenteditable="true" style="box-sizing: border-box; display: block;"></span></p><h2 cid="n84" mdtype="heading" contenteditable="true" class="md-end-block md-heading" style="box-sizing: border-box; font-size: 2.29rem; line-height: 1.2; font-family: Lato, &quot;Helvetica Neue&quot;, Helvetica, sans-serif; font-weight: 900; margin: 1em 0px 0.5em; position: relative; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-style: normal; font-variant-caps: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: pre-wrap; widows: auto; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration: none;"><span md-inline="plain" class="" style="box-sizing: border-box;">控制层</span></h2><pre class="md-fences md-end-block md-fences-with-lineno" lang="java" contenteditable="false" cid="n87" mdtype="fences" style="box-sizing: border-box; overflow: visible; font-family: Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 1.125rem; white-space: pre; text-align: left; break-inside: avoid; display: block; background-image: inherit; background-size: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(255, 255, 255); position: relative !important; color: rgb(122, 122, 122); padding: 1.125em 1.125em 1.125em 0px; margin-bottom: 0.88em; border: 1px solid rgb(122, 122, 122); line-height: 1.5rem; width: inherit; font-style: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-indent: 0px; text-transform: none; widows: auto; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; text-decoration: none; background-position: inherit inherit; background-repeat: inherit inherit;">  <span style="box-sizing: border-box;"></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">package</span> <span class="cm-def" style="box-sizing: border-box; color: rgb(0, 0, 255);">com</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">otakus</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">controller</span>;</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span cm-text="" style="box-sizing: border-box;">​</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">import</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">org</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">springframework</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">stereotype</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">Controller</span>;</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">import</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">org</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">springframework</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">web</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">bind</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">annotation</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">RequestMapping</span>;</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">import</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">org</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">springframework</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">web</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">bind</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">annotation</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">ResponseBody</span>;</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span cm-text="" style="box-sizing: border-box;">​</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-meta" style="box-sizing: border-box; color: rgb(85, 85, 85);">@Controller</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">public</span> <span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">class</span> <span class="cm-def" style="box-sizing: border-box; color: rgb(0, 0, 255);">DemoController</span> {</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span cm-text="" style="box-sizing: border-box;">​</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-meta" style="box-sizing: border-box; color: rgb(85, 85, 85);">@ResponseBody</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-meta" style="box-sizing: border-box; color: rgb(85, 85, 85);">@RequestMapping</span>(<span class="cm-string" style="box-sizing: border-box; color: rgb(170, 17, 17);">"/hello"</span>)</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp;<span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">public</span> <span class="cm-variable-3" style="box-sizing: border-box; color: rgb(0, 136, 85);">String</span> <span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">hello</span>() {</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">System</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">out</span>.<span class="cm-variable" style="box-sizing: border-box; color: rgb(0, 0, 0);">println</span>(<span class="cm-string" style="box-sizing: border-box; color: rgb(170, 17, 17);">"控制层代码执行&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;"</span>);</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp; &nbsp; &nbsp; &nbsp;<span class="cm-keyword" style="box-sizing: border-box; color: rgb(119, 0, 136);">return</span> <span class="cm-string" style="box-sizing: border-box; color: rgb(170, 17, 17);">"hello"</span>;</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"> &nbsp;  }</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;">}</span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span cm-text="" style="box-sizing: border-box;">​</span></span></pre><p cid="n92" mdtype="paragraph" style="box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; -webkit-margin-start: 0px; -webkit-margin-end: 0px; font-size: 1.25rem; line-height: 1.8; font-weight: 300; position: relative; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-family: Merriweather, &quot;PT Serif&quot;, Georgia, &quot;Times New Roman&quot;, STSong, serif; font-style: normal; font-variant-caps: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: pre-wrap; widows: auto; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration: none;"><span class="md-line md-end-block" cid="n90" mdtype="line" contenteditable="true" style="box-sizing: border-box; display: block;"></span></p><h2 cid="n100" mdtype="heading" contenteditable="true" class="md-end-block md-heading" style="box-sizing: border-box; font-size: 2.29rem; line-height: 1.2; font-family: Lato, &quot;Helvetica Neue&quot;, Helvetica, sans-serif; font-weight: 900; margin: 1em 0px 0.5em; position: relative; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-style: normal; font-variant-caps: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: pre-wrap; widows: auto; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration: none;"><span md-inline="plain" style="box-sizing: border-box;">测试结果</span></h2><p cid="n111" mdtype="paragraph" class="" style="box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; -webkit-margin-start: 0px; -webkit-margin-end: 0px; font-size: 1.25rem; line-height: 1.8; font-weight: 300; position: relative; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-family: Merriweather, &quot;PT Serif&quot;, Georgia, &quot;Times New Roman&quot;, STSong, serif; font-style: normal; font-variant-caps: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: pre-wrap; widows: auto; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration: none;"><span class="md-line md-end-block" cid="n112" mdtype="line" contenteditable="true" style="box-sizing: border-box; display: block;"><span md-inline="plain" class="" style="box-sizing: border-box;">日志输出：</span></span></p><pre class="md-fences md-end-block md-fences-with-lineno" lang="powershell" contenteditable="false" cid="n103" mdtype="fences" style="box-sizing: border-box; overflow: visible; font-family: Menlo, Monaco, &quot;Courier New&quot;, monospace; font-size: 1.125rem; white-space: pre; text-align: left; break-inside: avoid; display: block; background-image: inherit; background-size: inherit; background-attachment: inherit; background-origin: inherit; background-clip: inherit; background-color: rgb(255, 255, 255); position: relative !important; color: rgb(122, 122, 122); padding: 1.125em 1.125em 1.125em 0px; margin-bottom: 0.88em; border: 1px solid rgb(122, 122, 122); line-height: 1.5rem; width: inherit; font-style: normal; font-variant-caps: normal; font-weight: normal; letter-spacing: normal; orphans: auto; text-indent: 0px; text-transform: none; widows: auto; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; text-decoration: none; background-position: inherit inherit; background-repeat: inherit inherit;">  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-operator" style="box-sizing: border-box; color: rgb(152, 26, 26);">..</span><span class="cm-punctuation" style="box-sizing: border-box;">.</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-error" style="box-sizing: border-box; color: red;">控制层处理请求前执行的代码块</span><span class="cm-operator" style="box-sizing: border-box; color: rgb(152, 26, 26);">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-error" style="box-sizing: border-box; color: red;">控制层代码执行</span><span class="cm-operator" style="box-sizing: border-box; color: rgb(152, 26, 26);">&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-error" style="box-sizing: border-box; color: red;">控制层处理请求后执行的代码块</span><span class="cm-operator" style="box-sizing: border-box; color: rgb(152, 26, 26);">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-error" style="box-sizing: border-box; color: red;">请求完成后执行的代码块</span><span class="cm-operator" style="box-sizing: border-box; color: rgb(152, 26, 26);">&gt;&gt;&gt;&gt;&gt;&gt;&gt;</span></span><br>  <span role="presentation" style="box-sizing: border-box; padding-right: 0.1px;"><span class="cm-operator" style="box-sizing: border-box; color: rgb(152, 26, 26);">..</span><span class="cm-punctuation" style="box-sizing: border-box;">.</span></span></pre><p cid="n108" mdtype="paragraph" class="" style="box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; -webkit-margin-start: 0px; -webkit-margin-end: 0px; font-size: 1.25rem; line-height: 1.8; font-weight: 300; position: relative; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-family: Merriweather, &quot;PT Serif&quot;, Georgia, &quot;Times New Roman&quot;, STSong, serif; font-style: normal; font-variant-caps: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: pre-wrap; widows: auto; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration: none;"><span class="md-line md-end-block" cid="n106" mdtype="line" contenteditable="true" style="box-sizing: border-box; display: block;"></span></p><p cid="n69" mdtype="paragraph" class="md-focus-p" style="box-sizing: border-box; -webkit-margin-before: 1rem; -webkit-margin-after: 1rem; -webkit-margin-start: 0px; -webkit-margin-end: 0px; font-size: 1.25rem; line-height: 1.8; font-weight: 300; position: relative; width: inherit; caret-color: rgb(51, 51, 51); color: rgb(51, 51, 51); font-family: Merriweather, &quot;PT Serif&quot;, Georgia, &quot;Times New Roman&quot;, STSong, serif; font-style: normal; font-variant-caps: normal; letter-spacing: normal; orphans: auto; text-align: start; text-indent: 0px; text-transform: none; white-space: pre-wrap; widows: auto; word-spacing: 0px; -webkit-text-size-adjust: auto; -webkit-text-stroke-width: 0px; background-color: rgb(255, 255, 255); text-decoration: none;"></p>
            ', 3, 'post', 'publish', 'html', 'springboot,拦截器', 'springboot', 4, 0, 1, 1, 1);